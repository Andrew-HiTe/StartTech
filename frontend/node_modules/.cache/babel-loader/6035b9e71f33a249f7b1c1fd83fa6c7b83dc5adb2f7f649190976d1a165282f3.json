{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CTT\\\\Desktop\\\\StartTech\\\\frontend\\\\src\\\\hooks\\\\useAuth.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n/**\r\n * Hook customizado para gerenciamento de autenticação\r\n * Fornece funcionalidades de login, controle de loading,\r\n * gerenciamento de erros e integração com AuthService\r\n */\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport AuthService from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  /**\r\n   * Executa o processo de login utilizando o AuthService\r\n   */\n  const login = async (email, senha) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const data = await AuthService.login(email, senha);\n      if (data.success) {\n        setUser(data.user);\n        // Armazenar no localStorage para persistência\n        localStorage.setItem('user', JSON.stringify(data.user));\n        return true;\n      } else {\n        setError(data.message || 'Email ou senha incorretos');\n        return false;\n      }\n    } catch (error) {\n      setError('Erro de conexão com o servidor');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /**\r\n   * Executa o processo de logout\r\n   */\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n\n  /**\r\n   * Define uma mensagem de erro personalizada\r\n   */\n  const showError = message => {\n    setError(message);\n  };\n\n  /**\r\n   * Limpa a mensagem de erro atual\r\n   */\n  const clearError = () => {\n    setError(null);\n  };\n\n  // Verificar se há usuário logado no localStorage ao inicializar\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      try {\n        setUser(JSON.parse(storedUser));\n      } catch (error) {\n        localStorage.removeItem('user');\n      }\n    }\n  }, []);\n\n  // Auto-remover erro após 5 segundos\n  useEffect(() => {\n    if (error) {\n      const timer = setTimeout(() => {\n        setError(null);\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [error]);\n  const value = {\n    user,\n    login,\n    logout,\n    loading,\n    error,\n    showError,\n    clearError,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n/**\r\n * Hook que encapsula lógica de autenticação e estados relacionados\r\n */\n_s(AuthProvider, \"0Dhqlx1pMlgqi0nMF9JUaSk8wIY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","AuthService","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","login","email","senha","data","success","localStorage","setItem","JSON","stringify","message","logout","removeItem","showError","clearError","storedUser","getItem","parse","timer","setTimeout","clearTimeout","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/CTT/Desktop/StartTech/frontend/src/hooks/useAuth.js"],"sourcesContent":["/**\r\n * Hook customizado para gerenciamento de autenticação\r\n * Fornece funcionalidades de login, controle de loading,\r\n * gerenciamento de erros e integração com AuthService\r\n */\r\n\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport AuthService from '../services/authService';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  /**\r\n   * Executa o processo de login utilizando o AuthService\r\n   */\r\n  const login = async (email, senha) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const data = await AuthService.login(email, senha);\r\n      \r\n      if (data.success) {\r\n        setUser(data.user);\r\n        // Armazenar no localStorage para persistência\r\n        localStorage.setItem('user', JSON.stringify(data.user));\r\n        return true;\r\n      } else {\r\n        setError(data.message || 'Email ou senha incorretos');\r\n        return false;\r\n      }\r\n    } catch (error) {\r\n      setError('Erro de conexão com o servidor');\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Executa o processo de logout\r\n   */\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  /**\r\n   * Define uma mensagem de erro personalizada\r\n   */\r\n  const showError = (message) => {\r\n    setError(message);\r\n  };\r\n\r\n  /**\r\n   * Limpa a mensagem de erro atual\r\n   */\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  // Verificar se há usuário logado no localStorage ao inicializar\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      try {\r\n        setUser(JSON.parse(storedUser));\r\n      } catch (error) {\r\n        localStorage.removeItem('user');\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Auto-remover erro após 5 segundos\r\n  useEffect(() => {\r\n    if (error) {\r\n      const timer = setTimeout(() => {\r\n        setError(null);\r\n      }, 5000);\r\n\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [error]);\r\n\r\n  const value = {\r\n    user,\r\n    login,\r\n    logout,\r\n    loading,\r\n    error,\r\n    showError,\r\n    clearError,\r\n    isAuthenticated: !!user\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n/**\r\n * Hook que encapsula lógica de autenticação e estados relacionados\r\n */\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}