{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CTT\\\\Desktop\\\\StartTech\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/**\r\n * Componente principal da aplicação React\r\n * Renderiza primeiro a Home e depois o Login quando necessário\r\n */\n\nimport './App.css';\nimport Home from './pages/Home';\nimport homelogo from './assets/images/homelogo.png';\nimport diagrama from './assets/images/diagrama.jpg';\nimport LoginForm from './components/LoginForm';\nimport AccessManager from './components/AccessManager';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showLogin, setShowLogin] = useState(false);\n  const [showAccessManager, setShowAccessManager] = useState(false);\n\n  // Função para mostrar a tela de login\n  const handleShowLogin = () => {\n    setShowLogin(true);\n    setShowAccessManager(false);\n  };\n\n  // Função para mostrar o gerenciador de acessos\n  const handleShowAccessManager = () => {\n    setShowAccessManager(true);\n    setShowLogin(false);\n  };\n\n  // Função para voltar ao home\n  const handleBackToHome = () => {\n    setShowLogin(false);\n    setShowAccessManager(false);\n  };\n\n  // Se showAccessManager for true, renderiza o gerenciador de acessos\n  if (showAccessManager) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(AccessManager, {\n        onBack: handleBackToHome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Se showLogin for true, renderiza a tela de login\n  if (showLogin) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-background\",\n          style: {\n            backgroundImage: `url(${process.env.PUBLIC_URL}/background.jpg)`\n          },\n          children: /*#__PURE__*/_jsxDEV(LoginForm, {\n            onLoginSuccess: handleShowAccessManager,\n            onBack: handleBackToHome\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Por padrão, renderiza a página Home\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Home, {\n      imagem: homelogo,\n      diag: diagrama,\n      onShowLogin: handleShowLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"m2UfhMdIGk19fBUNOYGV6+6EoGM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Home","homelogo","diagrama","LoginForm","AccessManager","useState","jsxDEV","_jsxDEV","App","_s","showLogin","setShowLogin","showAccessManager","setShowAccessManager","handleShowLogin","handleShowAccessManager","handleBackToHome","className","children","onBack","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundImage","process","env","PUBLIC_URL","onLoginSuccess","imagem","diag","onShowLogin","_c","$RefreshReg$"],"sources":["C:/Users/CTT/Desktop/StartTech/frontend/src/App.js"],"sourcesContent":["/**\r\n * Componente principal da aplicação React\r\n * Renderiza primeiro a Home e depois o Login quando necessário\r\n */\r\n\r\nimport './App.css';\r\nimport Home from './pages/Home';\r\nimport homelogo from './assets/images/homelogo.png'\r\nimport diagrama from './assets/images/diagrama.jpg'\r\nimport LoginForm from './components/LoginForm'\r\nimport AccessManager from './components/AccessManager'\r\nimport { useState } from 'react';\r\n\r\nfunction App() {\r\n  const [showLogin, setShowLogin] = useState(false);\r\n  const [showAccessManager, setShowAccessManager] = useState(false);\r\n\r\n  // Função para mostrar a tela de login\r\n  const handleShowLogin = () => {\r\n    setShowLogin(true);\r\n    setShowAccessManager(false);\r\n  };\r\n\r\n  // Função para mostrar o gerenciador de acessos\r\n  const handleShowAccessManager = () => {\r\n    setShowAccessManager(true);\r\n    setShowLogin(false);\r\n  };\r\n\r\n  // Função para voltar ao home\r\n  const handleBackToHome = () => {\r\n    setShowLogin(false);\r\n    setShowAccessManager(false);\r\n  };\r\n\r\n  // Se showAccessManager for true, renderiza o gerenciador de acessos\r\n  if (showAccessManager) {\r\n    return (\r\n      <div className=\"App\">\r\n        <AccessManager onBack={handleBackToHome} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Se showLogin for true, renderiza a tela de login\r\n  if (showLogin) {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <div \r\n            className=\"login-background\"\r\n            style={{\r\n              backgroundImage: `url(${process.env.PUBLIC_URL}/background.jpg)`\r\n            }}\r\n          >\r\n            <LoginForm onLoginSuccess={handleShowAccessManager} onBack={handleBackToHome} />\r\n          </div>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Por padrão, renderiza a página Home\r\n  return (\r\n    <div className=\"App\">\r\n      <Home imagem={homelogo} diag={diagrama} onShowLogin={handleShowLogin} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA,OAAO,WAAW;AAClB,OAAOA,IAAI,MAAM,cAAc;AAC/B,OAAOC,QAAQ,MAAM,8BAA8B;AACnD,OAAOC,QAAQ,MAAM,8BAA8B;AACnD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,aAAa,MAAM,4BAA4B;AACtD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACO,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;;EAEjE;EACA,MAAMS,eAAe,GAAGA,CAAA,KAAM;IAC5BH,YAAY,CAAC,IAAI,CAAC;IAClBE,oBAAoB,CAAC,KAAK,CAAC;EAC7B,CAAC;;EAED;EACA,MAAME,uBAAuB,GAAGA,CAAA,KAAM;IACpCF,oBAAoB,CAAC,IAAI,CAAC;IAC1BF,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;;EAED;EACA,MAAMK,gBAAgB,GAAGA,CAAA,KAAM;IAC7BL,YAAY,CAAC,KAAK,CAAC;IACnBE,oBAAoB,CAAC,KAAK,CAAC;EAC7B,CAAC;;EAED;EACA,IAAID,iBAAiB,EAAE;IACrB,oBACEL,OAAA;MAAKU,SAAS,EAAC,KAAK;MAAAC,QAAA,eAClBX,OAAA,CAACH,aAAa;QAACe,MAAM,EAAEH;MAAiB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAEV;;EAEA;EACA,IAAIb,SAAS,EAAE;IACb,oBACEH,OAAA;MAAKU,SAAS,EAAC,KAAK;MAAAC,QAAA,eAClBX,OAAA;QAAQU,SAAS,EAAC,YAAY;QAAAC,QAAA,eAC5BX,OAAA;UACEU,SAAS,EAAC,kBAAkB;UAC5BO,KAAK,EAAE;YACLC,eAAe,EAAE,OAAOC,OAAO,CAACC,GAAG,CAACC,UAAU;UAChD,CAAE;UAAAV,QAAA,eAEFX,OAAA,CAACJ,SAAS;YAAC0B,cAAc,EAAEd,uBAAwB;YAACI,MAAM,EAAEH;UAAiB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7E;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEV;;EAEA;EACA,oBACEhB,OAAA;IAAKU,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBX,OAAA,CAACP,IAAI;MAAC8B,MAAM,EAAE7B,QAAS;MAAC8B,IAAI,EAAE7B,QAAS;MAAC8B,WAAW,EAAElB;IAAgB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrE,CAAC;AAEV;AAACd,EAAA,CAvDQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAyDZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}